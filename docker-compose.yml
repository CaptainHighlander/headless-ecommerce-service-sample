version: '3'

services:
    discovery:
        image: discovery-service
        build: ./discovery_service
        hostname: discovery-service
        container_name: discovery-service
        restart: unless-stopped
        networks:
            - ecommerce
        ports:
            - 8761:8761
    catalog:
        image: catalog-service
        build: ./catalog_service  
        hostname: catalog-service
        container_name: catalog-service
        restart: unless-stopped
        depends_on:
            - discovery
            - mariadb
            - kafka1
            - kafka2
            - kafka3
            - manager
        environment:
            EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka    
        networks:
            - ecommerce
        ports:
            - 8080:8080 
    order:
        image: order-service
        build: ./order_service  
        hostname: order-service
        container_name: order-service
        restart: unless-stopped
        depends_on:
            - discovery
            - mariadb
            - kafka1
            - kafka2
            - kafka3
            - manager
        environment:
            EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka    
        networks:
            - ecommerce
        ports:
            - 3000:3000
    wallet:
        image: wallet-service
        build: ./wallet_service  
        hostname: wallet-service
        container_name: wallet-service
        restart: unless-stopped
        depends_on:
            - discovery
            - mariadb
            - kafka1
            - kafka2
            - kafka3
            - manager
        environment:
            EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka    
        networks:
            - ecommerce
        ports:
            - 8081:8081 
    warehouse:
        image: warehouse-service
        build: ./warehouse_service  
        hostname: warehouse-service
        container_name: warehouse-service
        restart: unless-stopped
        depends_on:
            - discovery
            - mariadb
            - kafka1
            - kafka2
            - kafka3
            - manager
        environment:
            EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka    
        networks:
            - ecommerce
        ports:
            - 8082:8082 
# DATABASE            
    mariadb:
        image: "mariadb:10.6.3"
        container_name: DBMS-MariaDB
        restart: unless-stopped
        volumes:
            - ./docker/mariadb/init/:/docker-entrypoint-initdb.d
            - ./docker/mariadb/conf:/etc/mysql/mariadb.conf.d/
        environment:
            MYSQL_ROOT_PASSWORD: password   
            MYSQL_TCP_PORT: 3307
        networks:
            - ecommerce
        ports:
            - 3307:3307
#KAFKA
    zoo:
        image: zookeeper:3.4.9
        hostname: zoo
        restart: unless-stopped
        networks:
            - ecommerce
        ports:
        - "2181:2181"
        environment:
            ZOO_MY_ID: 1
            ZOO_PORT: 2181
            ZOO_SERVERS: server.1=zoo:2888:3888
        volumes:
            - ./zk-single-kafka-multiple/zoo/data:/data
            - ./zk-single-kafka-multiple/zoo/datalog:/datalog
    kafka1:
        image: confluentinc/cp-kafka:5.3.0
        hostname: kafka1
        restart: unless-stopped
        networks:
            - ecommerce
        ports:
            - "9091:9091"
        environment:
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9091
            KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
            KAFKA_BROKER_ID: 1
            KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        volumes:
            - ./zk-single-kafka-multiple/kafka1/data:/var/lib/kafka/data
        depends_on:
            - zoo
    kafka2:
        image: confluentinc/cp-kafka:5.3.0
        hostname: kafka2
        restart: unless-stopped
        networks:
            - ecommerce
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
            KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
            KAFKA_BROKER_ID: 2
            KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        volumes:
            - ./zk-single-kafka-multiple/kafka2/data:/var/lib/kafka/data
        depends_on:
            - zoo
    kafka3:
        image: confluentinc/cp-kafka:5.3.0
        hostname: kafka3
        restart: unless-stopped
        networks:
            - ecommerce
        ports:
            - "9093:9093"
        environment:
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9093
            KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
            KAFKA_BROKER_ID: 3
            KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        volumes:
            - ./zk-single-kafka-multiple/kafka3/data:/var/lib/kafka/data
        depends_on:
            - zoo
    manager:
        image: sheepkiller/kafka-manager
        restart: unless-stopped
        networks:
            - ecommerce
        ports:
            - 9000:9000
        environment:
            - ZK_HOSTS=zoo:2181
        depends_on:
            - zoo   
networks:
    ecommerce:
        ipam:
            config:
                - subnet: 192.168.1.0/24
          