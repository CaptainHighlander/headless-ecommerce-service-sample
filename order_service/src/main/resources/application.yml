spring:
  application:
    name: order
  datasource:
    #url: jdbc:mariadb://localhost:3306/orderDB
    url: jdbc:mariadb://mariadb:3307/orderdb
    #database-host: localhost
    database-host: mariadb
    database-name: orderdb
    #database-port: 3306
    database-port: 3307
    username: root
    password: password
    debezium-connector-name: order_mysql_connector
    debezium-cluster-name: order_mysql_db_server
    debezium-id: 10183
    outbox-table: order_outbox
  jpa:
    show-sql: true
    generate-ddl: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
    #hibernate:
      #ddl-auto: create-drop
  kafka:
    bootstrap-servers:
      #- localhost:9091
      #- localhost:9092
      #- localhost:9093
      - kafka1:9091
      - kafka2:9092
      - kafka3:9093
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: ecommerce
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  main:
    web-application-type: reactive
  sql:
    init:
      username: root
      password: password
      schema-locations: classpath*:schema.sql
      data-locations: classpath*:data.sql
server:
  port: 3000
  error:
    include-message: always
eureka:
  instance:
    hostname: localhost
    preferIpAddress: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 5
  client:
    serviceUrl:
      #defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
      defaultZone: ${EUREKA_URI:http://discovery:8761/eureka}
graphql:
  packages:
    - "it.polito.wa2group8.order_service"
security:
  jwt:
    jwtSecret: 462D4A614E645267556B587032733575123456789AA
